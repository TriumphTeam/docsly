[versions]
kotlin = "2.1.20"
kotlinx-serialization = "1.8.1"
kotlinx-coroutines = "1.10.2"
license = "0.16.1"

dokka = "2.0.0"

# Rest
ktor = "3.1.2"

# DB
exposed = "0.60.0"
postgres = "0.8.9"
hikari = "5.0.1"

# Logging
log4j = "2.20.0"

# Discord
kord = "0.15.0"
commands = "2.0.0-BETA-2"

# Caching
caffeine = "3.1.8"

# Formatting
spotless = "6.12.0"

[libraries]
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "kotlinx-serialization" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }
dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }

gradle-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# Ktor server
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-negociation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }

# Common
ktor-resources = { module = "io.ktor:ktor-resources", version.ref = "ktor" }

# Ktor client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-negociation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

# DB
exposed = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgres = { module = "com.impossibl.pgjdbc-ng:pgjdbc-ng", version.ref = "postgres" }

# Logger
logger-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
logger-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

# Discord
kord = { module = "dev.kord:kord-core", version.ref = "kord" }
commands = { module = "dev.triumphteam:triumph-cmd-kord", version.ref = "commands" }
commands-coroutines = { module = "dev.triumphteam:triumph-cmd-kotlin-coroutines", version.ref = "commands" }
commands-extensions = { module = "dev.triumphteam:triumph-cmd-kotlin-extensions", version.ref = "commands" }

# Caching
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }

# Testing
dokka-api-test = { module = "org.jetbrains.dokka:dokka-test-api", version.ref = "dokka" }
dokka-base-test = { module = "org.jetbrains.dokka:dokka-base-test-utils", version.ref = "dokka" }

# build
build-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
build-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
build-license = { module = "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin", version.ref = "license" }
build-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
build-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }

[bundles]
ktor-server = [
    "ktor-server-core",
    "ktor-server-cio",
    "ktor-server-cors",
    "ktor-server-resources",
    "ktor-server-negociation",
    "ktor-server-call-logging",
    "ktor-server-call-logging-jvm",
]
ktor-client = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-auth",
    "ktor-client-negociation",
    "ktor-client-json",
    "ktor-client-resources",
    "ktor-client-logging",
]
logger = [
    "logger-core",
    "logger-impl",
]
database = [
    "exposed",
    "exposed-dao",
    "exposed-jdbc",
    "hikari",
    "postgres",
]
commands = [
    "commands",
    "commands-coroutines",
    "commands-extensions",
]
build = [
    "build-kotlin",
    "build-serialization",
    "build-license",
    "build-dokka",
    "build-spotless",
]
